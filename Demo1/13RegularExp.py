import re

# 正则表达式
# 用\d可以匹配一个数字，\w可以匹配一个字母或数字
# 要匹配变长的字符，在正则表达式中，用*表示任意个字符（包括0个），用+表示至少一个字符，用?表示0个或1个字符，用{n}表示n个字符，用{n,m}表示n-m个字符
# 用[]表示范围,^表示行的开头，^\d表示必须以数字开头。$表示行的结束，\d$表示必须以数字结束
# r前缀，就不用考虑转义的问题了
m = re.match(r'^\d{3}\-\d{3,8}$', '010-5789381')
if (m):
    print('OK')
else:
    print('match failed')

# 切分字符串
print(re.split(r'[\s\,\;]+', 'a,b,c;; d  e'))

# 用()表示的就是要提取的分组（Group）:子串
m2 = re.match(r'^(\d{3})-(\d{3,8})$', '010-5789381')
print(m2.group(0))
print(m2.group(1))
print(m2.group(2))

# 贪婪匹配,也就是匹配尽可能多的字符,让\d+采用非贪婪匹配（也就是尽可能少匹配），才能把后面的0匹配出来，否则匹配结果为('102300', '')
# 加个?就可以让\d+采用非贪婪匹配：('1023', '00')
print(re.match(r'^(\d+?)(0*)$', '102300').groups())


# 预编译该正则表达式,效率
re_telephone = re.compile(r'^(\d{3})-(\d{3,8})$')
print(re_telephone.match('010-12345').groups())
print(re_telephone.match('010-8086').groups())

